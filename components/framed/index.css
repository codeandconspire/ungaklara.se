@import '../base';

/* @define Framed */
.Framed {
	flex: 0 1 auto;
	padding: 0 0 var(--Framed-distance) var(--Framed-distance);
	position: relative;
	--Framed-distance: 0.7rem;
}

.Framed::before {
	content: '';
	width: calc(100% - var(--Framed-distance));
	height: calc(100% - var(--Framed-distance));
	position: absolute;
	left: 0;
	top: var(--Framed-distance);
	z-index: -1;
	background-color: rgb(var(--theme-color));
}

.Framed--flexible {
	--Framed-distance: 1.4rem;
}

@media (min-width: 800px) {
	.Framed:not(.Framed--sm) {
		--Framed-distance: 1.4rem;
	}
}

@media (min-width: 1000px) {
	.Framed:not(.Framed--sm):not(.Framed--flexible):not(.Framed--ellipse) {
		--Framed-distance: 2.3rem;
	}
}

.Framed-image {
	width: 100%;
	height: auto;
}

.Framed--ellipse {
	padding: 0 0 var(--Framed-distance) var(--Framed-distance);
}

.Framed--ellipse .Framed-image,
.Framed--ellipse::before {
	overflow: hidden;
	border-radius: 100%;
}

.Framed--ellipse::before {
	background: linear-gradient(
		-25deg,
		rgb(var(--color-pink)) 30%,
		rgba(var(--color-pink), 0) 85%,
		transparent
	);
}

/**
 * Loading
 */

.Framed.is-loading {
	display: flex;
	width: 100%;
}

.Framed.is-loading::after {
	content: '';
	display: block;
	height: 0;
	padding-bottom: calc(100% * 278 / 195);
}

.Framed.is-loading .Framed-image {
	background-color: #000;
}
